---
name: "Organization Housekeeping: Linter Rules"

on:
  schedule:
    - cron: '0 5 * * *' # https://crontab.guru
  push:
    branches:
      - main
    paths:
      - .github/workflows/housekeeping-linter-rules.yml
      - resources/linters

permissions:
  contents: write

jobs:
  read-repos:
    name: read-repos
    runs-on: ubuntu-latest
    outputs:
      REPOS: ${{ steps.generate-matrix.outputs.REPOS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Print Branchname
        run: echo ${{github.ref}}
      - name: Read repos using Github CLI
        id: generate-matrix
        run: |
          GH_ORG="sommerfeld-io"
          REPOS=$(gh repo list "$GH_ORG" --json="name")
          echo "$REPOS"
          echo "REPOS=$REPOS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

  update-repos:
    name: update-repos
    runs-on: ubuntu-latest
    needs: read-repos
    strategy:
      matrix:
        repo: ${{ fromJSON(needs.read-repos.outputs.REPOS) }}
    steps:
      - name: Info
        run: echo "matrix.repo.name = ${{ matrix.repo.name }}"
        shell: bash
      - name: Checkout code (source repo = .github)
        uses: actions/checkout@v3
        with:
          repository: "sommerfeld-io/.github"
          path: source-repo
      - name: Checkout code (target repo = ${{ matrix.repo.name }})
        uses: actions/checkout@v3
        with:
          repository: "sommerfeld-io/${{ matrix.repo.name }}"
          path: target-repo
      - name: Info
        run: |
          ls source-repo
          ls target-repo
        shell: bash

  on-failure:
    runs-on: ubuntu-latest
    needs: ['read-repos', 'update-repos']
    if: failure()
    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
