---
name: "Module: CI Linter"

on:
  workflow_call:

permissions:
  contents: read

jobs:
  info:
    name: info
    runs-on: ubuntu-latest
    steps:
      - name: Print repo name which runs the workflow
        run: echo "[INFO] repo = ${{ github.event.repository.name }}"
        shell: bash

  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  lint-folders:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run folderslint in container
        run: docker run -i --rm --volume "$(pwd):$(pwd)" --workdir "$(pwd)" sommerfeldio/folderslint:latest folderslint
        shell: bash

  lint-forbidden-folders:
    runs-on: ubuntu-latest
    if: github.repository != 'sommerfeld-io/.github'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run folderslint in container
        run: |
          SUCCESS=true

          BLACKLIST=(
            # Folders
            '.github/ISSUE_TEMPLATE'
            # Files
            '.github/PULL_REQUEST_TEMPLATE.md'
          )
          for entry in "${BLACKLIST[@]}"
          do
            echo "[INFO] Check forbidden file / folder '$entry'"
            if [[ -e "$entry" ]]; then
              echo "[ERROR] File / folder '$entry' exists, but should be absent"
              SUCCESS=false
            fi
          done

          case $SUCCESS in
            (true)    echo "[INFO] SUCCESS" && exit 0;;
            (false)   echo "[ERROR] Detected forbidden files / folders" && exit 1;;
          esac
        shell: bash

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ls-lint in container
        run: docker run -i --rm --volume "$(pwd):/data" --workdir "/data" lslintorg/ls-lint:1.11.0
        shell: bash

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          ignore_paths: node_modules target
